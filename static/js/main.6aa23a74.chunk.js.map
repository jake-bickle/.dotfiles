{"version":3,"sources":["Form.js","Table.js","App.js","index.js"],"names":["Form","initialState","name","job","state","handleChange","event","target","value","setState","handleSubmit","props","this","htmlFor","type","id","onChange","onClick","Component","TableHeader","TableBody","rows","characterData","map","row","index","key","removeCharacter","Table","App","characters","character","newState","filter","i","className","ReactDOM","render","document","getElementById"],"mappings":"oNA8CeA,E,4MA3CXC,aAAe,CACXC,KAAM,GACNC,IAAK,I,EAGTC,MAAQ,EAAKH,a,EAEbI,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAArBL,EADa,EACbA,KAAMM,EADO,EACPA,MACb,EAAKC,SAAL,eACKP,EAAOM,K,EAIhBE,aAAe,WACX,EAAKC,MAAMD,aAAa,EAAKN,OAC7B,EAAKK,SAAS,EAAKR,e,uDAGd,IAAD,EACgBW,KAAKR,MAAlBF,EADH,EACGA,KAAMC,EADT,EACSA,IACb,OACI,8BACI,2BAAOU,QAAQ,QAAf,QACA,2BACAC,KAAK,OACLZ,KAAK,OACLa,GAAG,OACHP,MAAON,EACPc,SAAUJ,KAAKP,eACf,2BAAOQ,QAAQ,OAAf,OACA,2BACAC,KAAK,OACLZ,KAAK,MACLa,GAAG,MACHP,MAAOL,EACPa,SAAUJ,KAAKP,eACf,2BAAOS,KAAK,SAASN,MAAM,SAASS,QAASL,KAAKF,oB,GAtC/CQ,aCUbC,EAAc,WAChB,OACI,+BACA,4BACI,oCACA,sCAMNC,EAAY,SAAAT,GACd,IAAMU,EAAOV,EAAMW,cAAcC,KAAI,SAACC,EAAKC,GAC3C,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAItB,MACT,4BAAKsB,EAAIrB,KACT,4BACI,4BAAQc,QAAU,kBAAMN,EAAMgB,gBAAgBF,KAA9C,eAKZ,OACE,+BACKJ,IAKIO,EAxCD,SAAAjB,GAAU,IACbW,EAAkCX,EAAlCW,cAAeK,EAAmBhB,EAAnBgB,gBACtB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWL,cAAeA,EAAeK,gBAAiBA,MC0BvDE,E,4MA5BXzB,MAAQ,CACJ0B,WAAY,I,EAGhBpB,aAAe,SAAAqB,GACX,EAAKtB,SAAS,CAAEqB,WAAW,GAAD,mBAAM,EAAK1B,MAAM0B,YAAjB,CAA6BC,O,EAG3DJ,gBAAkB,SAAAF,GAAU,IAElBO,EAAW,CACbF,WAFiB,EAAK1B,MAAnB0B,WAEqBG,QAAO,SAACF,EAAWG,GACvC,OAAOA,IAAMT,MAGrB,EAAKhB,SAASuB,I,uDAId,OACI,yBAAKG,UAAU,aACX,kBAAC,EAAD,CAAOb,cAAeV,KAAKR,MAAM0B,WAAYH,gBAAiBf,KAAKe,kBACnE,kBAAC,EAAD,CAAMjB,aAAcE,KAAKF,oB,GAvBvBQ,aCKlBkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6aa23a74.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Form extends Component{\n    initialState = {\n        name: '',\n        job: '',\n    }\n\n    state = this.initialState\n\n    handleChange = event => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    render(){\n        const {name, job} = this.state\n        return(\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                value={name}\n                onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input\n                type=\"text\"\n                name=\"job\"\n                id=\"job\"\n                value={job}\n                onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.handleSubmit} />\n            </form>\n        )\n    }\n}\n\nexport default Form","import React from 'react'\n\nconst Table = props => {\n    const {characterData, removeCharacter} = props\n    return (\n        <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n        </table>\n    )\n}\n\nconst TableHeader = () => {\n    return (\n        <thead>\n        <tr>\n            <th>Name</th>\n            <th>Job</th>\n        </tr>\n        </thead>\n    )\n}\n\nconst TableBody = props => {\n    const rows = props.characterData.map((row, index) =>{\n    return (\n        <tr key={index}>\n            <td>{row.name}</td>\n            <td>{row.job}</td>\n            <td>\n                <button onClick= {() => props.removeCharacter(index)}>Delete</button>\n            </td>\n        </tr>\n        )\n    })\n    return (\n      <tbody>\n          {rows}\n      </tbody>\n    )\n  }\n\nexport default Table","import React, {Component} from 'react';\nimport Form from './Form.js'\nimport Table from './Table.js'\n\nclass App extends Component{\n    state = {\n        characters: []\n    }\n\n    handleSubmit = character => { \n        this.setState({ characters: [...this.state.characters, character]}) \n    }\n\n    removeCharacter = index => {\n        const {characters} = this.state\n        const newState = {\n            characters : characters.filter((character, i) => {\n                return i !== index\n            }),\n        }\n        this.setState(newState)\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <Table characterData={this.state.characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        )\n    }\n}\n\nexport default App","// Tutorial from https://www.taniarascia.com/getting-started-with-react/\n\nimport React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App.js'\n// import App from './Api.js'\n\nconst heading = <div className=\"site-header\">Hello, world!</div>\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}